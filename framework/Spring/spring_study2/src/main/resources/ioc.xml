<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 在进行框架配置的时候，可以使用xml文件，也可以使用注解的方式。项目开发中，xml和注解一起使用。而且xml配置的方式比较完整  -->

    <!-- 根据属性值设置的时候，name的名称取决于setXX方法中Xx首字符小写的名称-->
    <bean id="person" class="com.maureen.bean.Person">
        <property name="id" value="1"></property>
        <property name="name" value="maureen"></property>
        <property name="age" value="18"></property>
        <property name="gender" value="女"></property>
    </bean>

    <!-- 使用构造器方法的时候，参数的name属性是由构造方法的参数列表的参数名称决定的 -->
    <bean id="person2" class="com.maureen.bean.Person">
        <constructor-arg name="id" value="2"></constructor-arg>
        <constructor-arg name="name" value="lisi"></constructor-arg>
        <constructor-arg name="age" value="22"></constructor-arg>
        <constructor-arg name="gender" value="女"></constructor-arg>
    </bean>

    <!-- 当通过构造器方法赋值的时候，可以把name属性值省略不写，但是要注意必须要保证参数值跟构造器的参数列表的顺序一致
        如果想不按照参数列表的顺序，就要加index下标来标注，从0开始
     -->
    <bean id="person3" class="com.maureen.bean.Person">
        <constructor-arg value="3"></constructor-arg>
        <constructor-arg value="男" index="3"></constructor-arg>
        <constructor-arg value="wangwu"></constructor-arg>
        <constructor-arg value="23"></constructor-arg>
    </bean>

    <!--当有多个相同参数的构造方法存在的时候，默认情况下是覆盖的过程，后面的构造方法会覆盖前面的构造方法
     如果非要赋值给另外一个构造方法，可以使用type的参数来进行指定-->
    <bean id="person4" class="com.maureen.bean.Person">
        <constructor-arg value="4"></constructor-arg>
        <constructor-arg value="zhaoliu"></constructor-arg>
        <constructor-arg value="23"></constructor-arg>
    </bean>

</beans>